//Date: 03/06/2019
//Author: TrongTran
//Design CPU 32 bit

module control (data, addr);
   parameter DATA_WIDTH = 20;
   parameter ADDR_WIDTH = 34;
   input [ADDR_WIDTH-1:0] addr;
   output[DATA_WIDTH-1:0] data;
   reg   [DATA_WIDTH-1:0] data;


   always @(*) begin
      case ({addr[30], addr[14:2], addr[6:2]})
         9'b?_1001_1000 :  begin
            data[14] = 1'b1;
         end
         9'b?_1011_1000 :  begin
            data[14] = 1'b1;
         end
         9'b?_1101_1000 :  begin
            data[14] = 1'b0;
         end
         9'b?_1111_1000 :  begin
            data[14] = 1'b0;
         end
      endcase
   end



   always @(*) begin
      case ({addr[30], addr[14:2], addr[6:2]})
         9'b0_0000_1100 :  data =  20'b0000_1000_0000_0000_0001;
         9'b1_0000_1100 :  data =  20'b0000_1000_1000_0000_0001;
         9'b0_0010_1100 :  data =  20'b0000_1000_0001_0000_0001;
         9'b0_0100_1100 :  data =  20'b0000_1000_0010_0000_0001;
         9'b0_0110_1100 :  data =  20'b0000_1000_0011_0000_0001;
         9'b0_1000_1100 :  data =  20'b0000_1000_0100_0000_0001;
         9'b0_1010_1100 :  data =  20'b0000_1000_0101_0000_0001;
         9'b1_1010_1100 :  data =  20'b0000_1000_1101_0000_0001;
         9'b0_1100_1100 :  data =  20'b0000_1000_0110_0000_0001;
         9'b0_1110_1100 :  data =  20'b0000_1000_0111_0000_0001;
         9'b?_0000_0100 :  data =  20'b0000_1010_0000_0000_0001;
         9'b?_0100_0100 :  data =  20'b0000_1010_0010_0000_0001;
         9'b?_0110_0100 :  data =  20'b0000_1010_0011_0000_0001;
         9'b?_1000_0100 :  data =  20'b0000_1010_0100_0000_0001;
         9'b?_1100_0100 :  data =  20'b0000_1010_0110_0000_0001;
         9'b?_1110_0100 :  data =  20'b0000_1010_0111_0000_0001;
         9'b0_0010_0100 :  data =  20'b0000_1010_0001_0000_0001;
         9'b0_1010_0100 :  data =  20'b0000_1010_0101_0000_0001;
         9'b1_1010_0100 :  data =  20'b0000_1010_1101_0000_0001;

         9'b?_0000_0000 :  data =  20'b0_000_1_0_1_0_0000_0_00_000_00;
         9'b?_0100_0000 :  data =  20'b0_000_1_0_1_0_0000_0_00_000_00;
         9'b?_0110_0000 :  data =  20'b0_000_1_0_1_0_0000_0_00_000_00;
         9'b?_1000_0000 :  data =  20'b0_000_1_0_1_0_0000_0_00_000_00;
         9'b?_1100_0000 :  data =  20'b0_000_1_0_1_0_0000_0_00_000_00;
         9'b?_0000_1000 :  data =  20'b0_001_0_0_1_0_0000_1_00_000_00;
         9'b?_0010_1000 :  data =  20'b0_001_0_0_1_0_0000_1_00_000_00;
         9'b?_0100_1000 :  data =  20'b0_001_0_0_1_0_0000_1_00_000_00;

         9'b?_0001_1000 :  begin
            if (addr[33] == 1'b1) begin
               data =  20'b1010_0011_0000_0000_0000;
            end else begin
               data =  20'b0010_0011_0000_0000_0000;
            end
         end
         9'b?_0011_1000 :  begin
            if (addr[33] == 1'b0) begin
               data =  20'b1010_0011_0000_0000_0000;
            end else begin
               data =  20'b0010_0011_0000_0000_0000;
            end
         end
         9'b?_1001_1000 :  begin
            if (addr[32] == 1'b1) begin
               data =  20'b1010_0111_0000_0000_0000;
            end else begin
               data =  20'b0010_0111_0000_0000_0000;
            end
         end
         9'b?_1011_1000 :  begin
            if (addr[32] == 1'b0) begin
               data =  20'b1010_0111_0000_0000_0000;
            end else begin
               data =  20'b0010_0111_0000_0000_0000;
            end
         end
         9'b?_1101_1000 :  begin
            if (addr[32] == 1'b1) begin
               data =  20'b1010_0011_0000_0000_0000;
            end else begin
               data =  20'b0010_0011_0000_0000_0000;
            end
         end
         9'b?_1111_1000 :  begin
            if (addr[32] == 1'b0) begin
               data =  20'b1010_0011_0000_0000_0000;
            end else begin
               data =  20'b0010_0011_0000_0000_0000;
            end
         end
         9'b?_???0_1101 :  data =  20'b0_011_1_0_1_0_1111_0_00_000_01;
         9'b?_???0_0101 :  data =  20'b0_011_1_0_1_1_0000_0_00_000_01;
         9'b?_???1_1011 :  data =  20'b1_101_1_0_1_1_0000_0_00_000_10;
         9'b?_0001_1001 :  data =  20'b1_100_1_0_1_0_0000_0_00_000_10;
         default: begin
            data =20'b0_000_0_0_0_0_0000_0_00_000_00;
         end

      endcase
   end

endmodule


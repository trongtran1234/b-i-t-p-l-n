module DMEM (clk, rst_n, MemRW, Addr, DataR, DataW);
parameter DATA_WIDTH = 32;
parameter ADDR_WIDTH = 32;

input  clk;
input  rst_n;
input  MemRW;
input  [ADDR_WIDTH-1:0] Addr;
input  [DATA_WIDTH-1:0] DataW;
output [DATA_WIDTH-1:0] DataR;
reg    [DATA_WIDTH-1:0] DataR;


reg [31:0] DMEM [0:31];


always @(*) begin
   if (!rst_n) begin
      DataR = 32'h0000_0000;
   end else if(MemRW ==1'b0) begin
      DataR <= DMEM[Addr];
      $display("DMEM[Addr] = %d", Addr);
   end else begin
      DataR <= DataR;
   end

end

always @(posedge clk) begin
   if (MemRW ==1'b1) begin
      DMEM[Addr] <= DataW;
      $display("DMEM[Addr] = %d", DMEM[Addr]);
   end else begin
      DMEM[Addr] <= DMEM[Addr];
   end
end

endmodule




module DMEM (clk, rst_n, MemRW, Addr, DataW, DataR);
  parameter WORD_LEN = 32;
  parameter DATA_MEM_SIZE = 1024;
  parameter MEM_CELL_SIZE = 8;


  input clk, rst_n, MemRW;
  input [WORD_LEN-1:0] Addr, DataW;
  output [WORD_LEN-1:0] DataR;

  integer i;
  reg [MEM_CELL_SIZE-1:0] dataMem [0:DATA_MEM_SIZE-1];
  wire [WORD_LEN-1:0] base_Addr;

  always @ (posedge clk) begin
    if (!rst_n)
      for (i = 0; i < DATA_MEM_SIZE; i = i + 1)
        dataMem[i] <= 0;
    else if (MemRW)
      {dataMem[base_Addr], dataMem[base_Addr + 1], dataMem[base_Addr + 2], dataMem[base_Addr + 3]} <= DataW;
  end

  assign base_Addr = ((Addr & 32'b11111111111111111111101111111111) >> 2) << 2;
  assign DataR = (Addr < 1024) ? 0 : {dataMem[base_Addr], dataMem[base_Addr + 1], dataMem[base_Addr + 2], dataMem[base_Addr + 3]};
endmodule





module DMEM (DataR, Addr, DataW, MemRW, rst_n, clk);
  input [31:0] Addr;
  input [31:0] DataW;
  input MemRW, rst_n, clk;
  output [31:0] DataR;

  reg [31:0] DataMemory [205:0];
  reg [31:0] DataR;

  initial  begin
    for (i = 0; i < 206; i = i + 1)
    DataMemory[i] <= 0;
  end

  always @(posedge clk or posedge rst_n)
    begin
    if(!rst_n)
        DataR = 0;
    else if(MemRW == 1)
        DataMemory[Addr] = DataW;
    end

    always @(negedge clk or posedge rst_n)
      begin
          if(rst_n == 1 && (Addr >= 0 && Addr <= 205)) begin
              DataR = DataMemory[Addr];
          end
      end
endmodule
